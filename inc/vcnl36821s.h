
#ifndef __VCNL36821S_H
#define __VCNL36821S_H
#include "MS51_16K.H"
#define VCNL36821S_ADDRESS          0x60
#define VCNL36821S_WHO_AM_I         0x26

#define VCNL36821S_REG_PS_CONF1     0x00
#define VCNL36821S_REG_PS_CONF2     0x03
#define VCNL36821S_REG_PS_CONF3     0x04
#define VCNL36821S_REG_PS_THDL      0x05
#define VCNL36821S_REG_PS_THDH      0x06
#define VCNL36821S_REG_PS_CANC      0x07
#define VCNL36821S_REG_PS_CONF4     0x08
#define VCNL36821S_REG_PS_DATA      0xF8
#define VCNL36821S_REG_INT_FLAG     0xF9
#define VCNL36821S_REG_ID           0xFA
#define VCNL36821S_REG_PS_AC_DATA   0xFB

// PS_CONF1
#define VCNL36821S_PS_ON            (1 << 1)
#define VCNL36821S_PS_IINT           (1 << 7)
// PS_CONF2
#define VCNL36821S_PS_ST            (1 << 0)
#define VCNL36821S_PS_SMART_PERS    (1 << 1)
#define VCNL36821S_PS_INT_SHIFT     2
#define VCNL36821S_PS_INT_MASK      (0x3 << VCNL36821S_PS_INT_SHIFT)
#define VCNL36821S_PS_INT_DISABLE   (PS_INT_DISABLE << VCNL36821S_PS_INT_SHIFT)
#define VCNL36821S_PS_INT_CLOSING   (PS_INT_CLOSING << VCNL36821S_PS_INT_SHIFT)
#define VCNL36821S_PS_INT_AWAY      (PS_INT_AWAY << VCNL36821S_PS_INT_SHIFT)
#define VCNL36821S_PS_INT_BOTH      (PS_INT_BOTH << VCNL36821S_PS_INT_SHIFT)
#define VCNL36821S_PS_PERS_SHIFT    4
#define VCNL36821S_PS_PERS_MASK     (0x3 << VCNL36821S_PS_PERS_SHIFT)
#define VCNL36821S_PS_PERS_1        (0x0 << VCNL36821S_PS_PERS_SHIFT)
#define VCNL36821S_PS_PERS_2        (0x1 << VCNL36821S_PS_PERS_SHIFT)
#define VCNL36821S_PS_PERS_3        (0x2 << VCNL36821S_PS_PERS_SHIFT)
#define VCNL36821S_PS_PERS_4        (0x3 << VCNL36821S_PS_PERS_SHIFT)
#define VCNL36821S_PS_PERIOD_SHIFT  6
#define VCNL36821S_PS_PERIOD_MASK   (0x3 << VCNL36821S_PS_PERIOD_SHIFT)
#define VCNL36821S_PS_PERIOD_10ms   (0x0 << VCNL36821S_PS_PERIOD_SHIFT)
#define VCNL36821S_PS_PERIOD_20ms   (0x1 << VCNL36821S_PS_PERIOD_SHIFT)
#define VCNL36821S_PS_PERIOD_40ms   (0x2 << VCNL36821S_PS_PERIOD_SHIFT)
#define VCNL36821S_PS_PERIOS_80ms   (0x3 << VCNL36821S_PS_PERIOD_SHIFT)
#define VCNL36821S_PS_HG            (1 << 10)
#define VCNL36821S_PS_ITB           (1 << 11)
#define VCNL36821S_PS_MPS_SHIFT     12
#define VCNL36821S_PS_MPS_MASK      (0x03 << VCNL36821S_PS_MPS_SHIFT)
#define VCNL36821S_PS_MPS_1P        (0x0 << VCNL36821S_PS_MPS_SHIFT)
#define VCNL36821S_PS_MPS_2P        (0x1 << VCNL36821S_PS_MPS_SHIFT)
#define VCNL36821S_PS_MPS_4P        (0x2 << VCNL36821S_PS_MPS_SHIFT)
#define VCNL36821S_PS_MPS_8P        (0x3 << VCNL36821S_PS_MPS_SHIFT)
#define VCNL36821S_PS_IT_SHIFT      14
#define VCNL36821S_PS_IT_MASK       (0x3 << VCNL36821S_PS_IT_SHIFT)
#define VCNL36821S_PS_IT_1T         (0x0 << VCNL36821S_PS_IT_SHIFT)
#define VCNL36821S_PS_IT_2T         (0x1 << VCNL36821S_PS_IT_SHIFT)
#define VCNL36821S_PS_IT_4T         (0x2 << VCNL36821S_PS_IT_SHIFT)
#define VCNL36821S_PS_IT_8T         (0x3 << VCNL36821S_PS_IT_SHIFT)
// PS_CONF3
#define VCNL36821S_PS_SP_INT        (1 << 2)
#define VCNL36821S_PS_FORCENUM      (1 << 4)
#define VCNL36821S_PS_TRIG          (1 << 5)
#define VCNL36821S_PS_AF            (1 << 6)
#define VCNL36821S_PS_I_VCSEL_SHIFT 8
#define VCNL36821S_PS_I_VCSEL_MASK  (0xF << VCNL36821S_PS_I_VCSEL_SHIFT)
#define VCNL36821S_PS_HD            (1 << 12)
#define VCNL36821S_PS_SC            (0x7 << 13)
// PS_CONF4
#define VCNL36821S_PS_AC_INT        (1 << 0)
#define VCNL36821S_PS_AC_TRIG       (1 << 2)
#define VCNL36821S_PS_AC            (1 << 3)
#define VCNL36821S_PS_AC_NUM_SHIFT  4
#define VCNL36821S_PS_AC_NUM_MASK   (0x3 << VCNL36821S_PS_AC_NUM_SHIFT)
#define VCNL36821S_PS_AC_NUM_1      (0x0 << VCNL36821S_PS_AC_NUM_SHIFT)
#define VCNL36821S_PS_AC_NUM_2      (0x1 << VCNL36821S_PS_AC_NUM_SHIFT)
#define VCNL36821S_PS_AC_NUM_4      (0x2 << VCNL36821S_PS_AC_NUM_SHIFT)
#define VCNL36821S_PS_AC_NUM_8      (0x3 << VCNL36821S_PS_AC_NUM_SHIFT)
#define VCNL36821S_PS_AC_PERIOD_SHIFT 6
#define VCNL36821S_PS_AC_PERIOD_MASK  (0x3 << VCNL36821S_PS_AC_PERIOD_SHIFT)
#define VCNL36821S_PS_AC_PERIOD_3ms   (0x0 << VCNL36821S_PS_AC_PERIOD_SHIFT)
#define VCNL36821S_PS_AC_PERIOD_6ms   (0x1 << VCNL36821S_PS_AC_PERIOD_SHIFT)
#define VCNL36821S_PS_AC_PERIOD_12ms  (0x2 << VCNL36821S_PS_AC_PERIOD_SHIFT)
#define VCNL36821S_PS_AC_PERIOD_24ms  (0x3 << VCNL36821S_PS_AC_PERIOD_SHIFT)
#define VCNL36821S_PS_LPPER_SHIFT   9
#define VCNL36821S_PS_LPPER_MASK    (0x3 << VCNL36821S_PS_LPPER_SHIFT)
#define VCNL36821S_PS_LPPER_40ms    (0x0 << VCNL36821S_PS_LPPER_SHIFT)
#define VCNL36821S_PS_LPPER_80ms    (0x1 << VCNL36821S_PS_LPPER_SHIFT)
#define VCNL36821S_PS_LPPER_160ms   (0x2 << VCNL36821S_PS_LPPER_SHIFT)
#define VCNL36821S_PS_LPPER_320ms   (0x3 << VCNL36821S_PS_LPPER_SHIFT)

// PS_AC_DATA
#define PS_AC_DATA_AC_BUSY          (1 << 15)
#define PS_AC_DATA_AC_SUN           (1 << 14)

// Defaults
#define VCNL36821S_DEFAULT_PS_CONF1 (0x0201 | \
                                     VCNL36821S_PS_ON | \
                                     VCNL36821S_PS_IINT)
#define VCNL36821S_DEFAULT_PS_CONF2 (VCNL36821S_PS_IT_8T | \
                                     VCNL36821S_PS_MPS_1P)
#define VCNL36821S_DEFAULT_PS_CONF3 (0x0008)
#define VCNL36821S_DEFAULT_PS_CONF4 (0x080F)
#define VCNL36821S_DEFAULT_PS_CANC  0x0000
#define VCNL36821S_DEFAULT_PS_THDL  0x0000
#define VCNL36821S_DEFAULT_PS_THDH  0x0FFF

 
#define   PS_I_VCSEL_50mA  8
#define   PS_I_VCSEL_66mA  9
#define   PS_I_VCSEL_82mA  10
#define   PS_I_VCSEL_98mA  11

#define VCNL_PS_CONF1      0x00
#define VCNL_PS_CONF2      0x03
#define VCNL_PS_CONF3      0x04
#define VCNL_PS_CONF4      0x04

#define VCNL_PS_THDL       0x05
#define VCNL_PS_THDH       0x06
#define VCNL_PS_CANC       0x07
#define VCNL_PS_AC_L       0x08
#define VCNL_PS_LPPERI     0x08
#define VCNL_PS_DATA       0xF8
#define VCNL_PS_INT_FLAG   0xF9
#define VCNL_PS_ID         0xFA
#define VCNL_PS_AC_DATA    0xFB

void Init_I2C(void);
void reset_I2C(void);
UINT8 writeWord(UINT8 reg, UINT16 rdata);
UINT8 readWord(UINT8 tmpreg, volatile UINT16 *rdata);
int VCNL36821S_begin(void);
int VCNL36821S_calib(void);
void VCNL_initialize(void);
void VCNL36821_Stop(void);
void I2C_reset(void);
#endif

