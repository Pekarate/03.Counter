C51 COMPILER V9.60.7.0   SYS                                                               06/30/2023 11:11:29 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE SYS
OBJECT MODULE PLACED IN .\Output\sys.obj
COMPILER INVOKED BY: D:\00.SOFTWARE\03.KeilcC51\C51\BIN\C51.EXE ..\Library\StdDriver\src\sys.c LARGE OMF2 OPTIMIZE(7,SPE
                    -ED) BROWSE INCDIR(..\Library\Device\Include;..\Library\StdDriver\inc;..\inc) DEBUG PRINT(.\lst\sys.lst) TABS(2) OBJECT(.
                    -\Output\sys.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* SPDX-License-Identifier: Apache-2.0                                                                    
             - */
   4          /* Copyright(c) 2020 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   5          /*                                                                                                        
             - */
   6          /*--------------------------------------------------------------------------------------------------------
             --*/
   7          
   8          #include "MS51_16K.H"
   9          
  10          unsigned char data  TA_REG_TMP,BYTE_TMP,SFRS_TMP;
  11          
  12            /**
  13            * @brief This API configures modify system HIRC value
  14            * @param[in] u8FsysMode . Valid values are:
  15            *                       - \ref HIRC_24                 :Internal HIRC 24MHz .
  16            *                       - \ref HIRC_16                 :Internal HIRC 16MHz.
  17            *                       - \ref HIRC_166                :Internal HIRC 16.6MHz.
  18            * @note      None.
  19            * @exmaple : MODIFY_HIRC(HIRC_24);
  20            */
  21           void MODIFY_HIRC(unsigned char u8HIRCSEL)
  22          {
  23   1          unsigned char data hircmap0,hircmap1, offset,judge;
  24   1          unsigned char trimvalue16bit;
  25   1      
  26   1          set_CHPCON_IAPEN;
  27   1          SFRS = 0 ;
  28   1          switch (u8HIRCSEL)
  29   1          {
  30   2            case HIRC_24:
  31   2              IAPAL = 0x38;
  32   2            break;
  33   2            case HIRC_16:
  34   2              IAPAL = 0x30;
  35   2            break;
  36   2            case HIRC_166:
  37   2              IAPAL = 0x30;
  38   2            break;
  39   2          }
  40   1          IAPAH = 0x00;
  41   1          IAPCN = READ_UID;
  42   1          set_IAPTRG_IAPGO;
  43   1          hircmap0 = IAPFD;
  44   1          IAPAL++;
  45   1          set_IAPTRG_IAPGO;
  46   1          hircmap1 = IAPFD;
  47   1      
C51 COMPILER V9.60.7.0   SYS                                                               06/30/2023 11:11:29 PAGE 2   

  48   1          switch (u8HIRCSEL)
  49   1          { 
  50   2            case HIRC_166:
  51   2              trimvalue16bit = ((hircmap0 << 1) + (hircmap1 & 0x01));
  52   2              judge = trimvalue16bit&0xC0;
  53   2              offset = trimvalue16bit&0x3F;
  54   2              trimvalue16bit -= 14;
  55   2              IAPCN = READ_DID;
  56   2              IAPAL = 1;
  57   2              IAPAH = 0;
  58   2              set_IAPTRG_IAPGO_WDCLR;
  59   2      
  60   2              if ((IAPFD==0x4B)||(IAPFD==0x52)||(IAPFD==0x53))    /* MS51 process */
  61   2              {
  62   3                if (offset<15)
  63   3                  {
  64   4                    if ((judge==0x40)||(judge==0x80)||(judge==0xC0))
  65   4                    trimvalue16bit -= 14;
  66   4                  }
  67   3                else
  68   3                    trimvalue16bit -= 4;
  69   3              }
  70   2              hircmap0 = (trimvalue16bit >> 1);
  71   2            break;
  72   2      
  73   2              default: break;                                       /*N76E003 process */
  74   2          }
  75   1      
  76   1          TA = 0xAA;
  77   1          TA = 0x55;
  78   1          RCTRIM0 = hircmap0;
  79   1          TA = 0xAA;
  80   1          TA = 0x55;
  81   1          RCTRIM1 = hircmap1;
  82   1          clr_CHPCON_IAPEN;
  83   1      }
  84          
  85          
  86            /**
  87            * @brief This API configures system clock source
  88            * @param[in] u8FsysMode . Valid values are:
  89            *                       - \ref FSYS_HIRC                :Internal HIRC (16MHz as default).
  90            *                       - \ref FSYS_LIRC                :Internal LIRC.
  91            *                       - \ref FSYS_OSCIN_P00           :External clock input from P0.0.
  92            * @note      None.
  93            * @exmaple : FsysSelect(FSYS_LIRC);
  94            */
  95          void FsysSelect(unsigned char u8FsysMode)
  96          {
  97   1        switch (u8FsysMode)
  98   1        {
  99   2              //***** HIRC enable part *****  
 100   2          case FSYS_HIRC:
 101   2              ClockEnable(FSYS_HIRC);                 //Enable HIRC
 102   2              ClockSwitch(FSYS_HIRC);                 //Switching system clock HIRC
 103   2          break;
 104   2          
 105   2          //***** LIRC enable part*****
 106   2          case FSYS_LIRC:
 107   2              ClockSwitch(FSYS_LIRC);                 // LIRC always on switch system to LIRC
 108   2              clr_CKEN_HIRCEN;                        // Disable HIRC if needed 
 109   2          break;
C51 COMPILER V9.60.7.0   SYS                                                               06/30/2023 11:11:29 PAGE 3   

 110   2          
 111   2          /***** ECLK enable part clock in with P3.0 *****/ 
 112   2          case FSYS_OSCIN_P30:
 113   2              ClockEnable(FSYS_HIRC);                 //Enable and system clock to HIRC
 114   2              ClockSwitch(FSYS_HIRC);
 115   2              ClockEnable(FSYS_OSCIN_P30);            //Enable External clock source
 116   2              ClockSwitch(FSYS_OSCIN_P30);            //Switching system clock to OSCIN 
 117   2              clr_CKEN_HIRCEN;                        //step5: disable HIRC if needed 
 118   2          break;
 119   2        }
 120   1      }
 121          
 122          void ClockEnable(unsigned char u8FsysMode)
 123          {
 124   1        switch (u8FsysMode)
 125   1        {
 126   2          /***** HIRC enable part ******/
 127   2          case FSYS_HIRC:
 128   2              set_CKEN_HIRCEN;                        //step1: Enable extnal clock source.
 129   2              while(!(CKSWT&SET_BIT5));      //step2: check clock source status and wait for ready
 130   2          break;
 131   2          /***** ECLK P30 enable part ******/
 132   2          case FSYS_OSCIN_P30:
 133   2              TA=0xAA;TA=0x55;CKEN|=0xC0;                        //step1: Enable extnal clock source.
 134   2              while(!(CKSWT&SET_BIT3));      //step2: check clock source status and wait for ready
 135   2          break;
 136   2        }
 137   1      }
 138          
 139          void ClockDisable(unsigned char u8FsysMode)
 140          {
 141   1        SFRS = 0;
 142   1        switch (u8FsysMode)
 143   1        {
 144   2           /***** HIRC Disable part ******/
 145   2          case FSYS_HIRC:
 146   2              clr_CKEN_HIRCEN;
 147   2          break;
 148   2          //***** ECLK from P3.0 Disable part ******/
 149   2          case FSYS_OSCIN_P30:
 150   2             TA=0xAA;TA=0x55;CKEN&=0x3F;
 151   2          break;
 152   2        }
 153   1      }
 154          
 155          void ClockSwitch(unsigned char u8FsysMode)
 156          {
 157   1        SFRS = 0 ;
 158   1        BIT_TMP=EA;EA=0;
 159   1        switch (u8FsysMode)
 160   1        {
 161   2          /***** HIRC Disable part ******/
 162   2          case FSYS_HIRC:
 163   2              clr_CKSWT_OSC1;
 164   2              clr_CKSWT_OSC0;
 165   2          break;
 166   2          /***** LIRC Disable part******/
 167   2          case FSYS_LIRC:
 168   2              set_CKSWT_OSC1;
 169   2              clr_CKSWT_OSC0;
 170   2          break;
 171   2          /***** ECLK P30 Disable part ******/
C51 COMPILER V9.60.7.0   SYS                                                               06/30/2023 11:11:29 PAGE 4   

 172   2          case FSYS_OSCIN_P30:
 173   2              set_CKSWT_ECLKST;
 174   2          break;
 175   2        }
 176   1        EA = BIT_TMP;
 177   1      }
 178          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    578    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
